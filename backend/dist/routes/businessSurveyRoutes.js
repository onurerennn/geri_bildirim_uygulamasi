"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const authMiddleware_1 = require("../middleware/authMiddleware");
const customAuth_1 = require("../middleware/customAuth");
const surveyController_1 = require("../controllers/surveyController");
const router = express_1.default.Router();
console.log('ğŸ’¡ Business survey routes baÅŸlatÄ±lÄ±yor...');
// Ä°ÅŸletmeye ait anketleri getirme endpoint'i
router.get('/surveys', authMiddleware_1.protect, customAuth_1.checkBusinessAdminOrSuperAdmin, surveyController_1.getBusinessSurveys);
// Ä°ÅŸletme anketleri iÃ§in alternatif route - daha esnek kontrol
router.get('/surveys/all', authMiddleware_1.protect, customAuth_1.flexibleRoleCheck, surveyController_1.getBusinessSurveys);
// Ä°ÅŸletmeye ait anket oluÅŸturma endpoint'i - esnek yetki kontrolÃ¼ ile
router.post('/surveys', authMiddleware_1.protect, customAuth_1.flexibleRoleCheck, surveyController_1.createSurvey);
// Debug iÃ§in anket oluÅŸturma - develop aÅŸamasÄ±nda kullanÄ±labilir
router.post('/surveys/debug', authMiddleware_1.protect, customAuth_1.debugRoleCheck, surveyController_1.createSurvey);
// Eski yolu korumak iÃ§in aynÄ± controller'Ä± burada da kullan
router.get('/:businessId/surveys', authMiddleware_1.protect, customAuth_1.checkBusinessAdminOrSuperAdmin, surveyController_1.getBusinessSurveys);
// POST yÃ¶ntemiyle alternatif anket oluÅŸturma - eski istemciler iÃ§in destek
router.post('/create-survey', authMiddleware_1.protect, customAuth_1.flexibleRoleCheck, surveyController_1.createSurvey);
console.log('âœ… Business survey routes baÅŸarÄ±yla yÃ¼klendi');
exports.default = router;
